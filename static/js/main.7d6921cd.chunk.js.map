{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactsFilter/ContactsFilter.module.css","components/App/App.module.css","hooks/useLocalStorage.js","components/Form/Form.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.jsx","components/App/App.js","index.js","components/Form/Form.module.css","components/ContactsItem/ContactsItem.module.css"],"names":["module","exports","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","Form","onSubmit","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","resetInput","className","css","form","e","preventDefault","type","value","pattern","title","required","onChange","currentTarget","id","input","button","ContactsItem","onDeleteContact","item","item__button","onClick","ContactsList","contacts","list","map","ContactsFilter","filter__label","contactsList","App","setContacts","filter","setFilter","app","contact","isRepeatName","find","toLowerCase","alert","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d6921cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__UE26V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"ContactsFilter_filter__label__3EaM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2jw8I\"};","import { useState, useEffect } from 'react';\r\n\r\nfunction useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { useState } from 'react';\nimport shortid from 'shortid';\n\nimport css from '../Form/Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleNameChange = e => {\n    const { value } = e.currentTarget;\n    setName(value);\n  };\n\n  const handleNumberChange = e => {\n    const { value } = e.currentTarget;\n    setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleNameChange}\n          id={nameInputId}\n          className={css.input}\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleNumberChange}\n          id={numberInputId}\n          className={css.input}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport css from '../ContactsItem/ContactsItem.module.css';\n\nconst ContactsItem = ({ name, number, id, onDeleteContact }) => (\n  <li className={css.item}>\n    <span>{name}: </span>\n    <span>{number} </span>\n    <span>\n      <button\n        className={css.item__button}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </span>\n  </li>\n);\n\nContactsItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactsItem;\n","// import PropTypes from 'prop-types';\nimport ContactsItem from '../ContactsItem/ContactsItem';\nimport css from '../ContactsList/ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (\n  <ul className={css.list}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactsItem\n        key={id}\n        id={id}\n        name={name}\n        number={number}\n        onDeleteContact={onDeleteContact}\n      />\n    ))}\n  </ul>\n);\n\n// ContactsList.propTypes = {\n//   contacts: PropTypes.array,\n// };\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport css from '../ContactsFilter/ContactsFilter.module.css';\n\nconst ContactsFilter = ({ value, onChange }) => (\n  <label className={css.filter__label}>\n    Find contacts by name\n    <input\n      type=\"text\"\n      value={value}\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      onChange={onChange}\n    />\n  </label>\n);\n\nContactsFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ContactsFilter;\n","import { useState } from 'react';\nimport shortid from 'shortid';\n\nimport useLocalStorage from '../../hooks/useLocalStorage';\n\nimport Form from '../Form/Form';\nimport ContactsList from '../ContactsList/ContactsList';\nimport ContactsFilter from '../ContactsFilter/ContactsFilter';\n\nimport css from './App.module.css';\n\nconst contactsList = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', contactsList);\n\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts(contacts => {\n      const isRepeatName = contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      );\n\n      if (!isRepeatName) {\n        return setContacts([...contacts, contact]);\n      }\n\n      alert(`${name} is already in contacts`);\n      return [...contacts];\n    });\n  };\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const onChangeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getFilteredContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  return (\n    <div className={css.app}>\n      <h1>Phonebook</h1>\n      <Form onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n      <ContactsFilter value={filter} onChange={onChangeFilter} />\n\n      <ContactsList\n        contacts={getFilteredContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__37MRj\",\"input\":\"Form_input__2tLVD\",\"button\":\"Form_button__1OFV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__3qjTR\",\"item__button\":\"ContactsItem_item__button__3GOZu\"};"],"sourceRoot":""}